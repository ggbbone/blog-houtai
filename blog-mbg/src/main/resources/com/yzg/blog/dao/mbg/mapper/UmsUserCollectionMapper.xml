<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzg.blog.dao.mbg.mapper.UmsUserCollectionMapper">
  <resultMap id="BaseResultMap" type="com.yzg.blog.dao.mbg.model.UmsUserCollection">
    <id column="collections_id" jdbcType="INTEGER" property="collectionsId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collections_id, type, type_id, status, created_date, updated_date
  </sql>
  <select id="selectByExample" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_user_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ums_user_collection
    where collections_id = #{collectionsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ums_user_collection
    where collections_id = #{collectionsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollectionExample">
    delete from ums_user_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollection">
    insert into ums_user_collection (collections_id, type, type_id, 
      status, created_date, updated_date
      )
    values (#{collectionsId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{typeId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollection">
    insert into ums_user_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectionsId != null">
        collections_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectionsId != null">
        #{collectionsId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollectionExample" resultType="java.lang.Long">
    select count(*) from ums_user_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_user_collection
    <set>
      <if test="record.collectionsId != null">
        collections_id = #{record.collectionsId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDate != null">
        updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_user_collection
    set collections_id = #{record.collectionsId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      type_id = #{record.typeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      updated_date = #{record.updatedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollection">
    update ums_user_collection
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collections_id = #{collectionsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzg.blog.dao.mbg.model.UmsUserCollection">
    update ums_user_collection
    set type = #{type,jdbcType=TINYINT},
      type_id = #{typeId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP}
    where collections_id = #{collectionsId,jdbcType=INTEGER}
  </update>
</mapper>